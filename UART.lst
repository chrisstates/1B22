;  LST file generated by mikroListExporter - v.2.0 
; Date/Time: 3/25/2015 11:33:31 PM
;----------------------------------------------

;Address Opcode 	ASM
0x0000	0x2856      	GOTO       86
_UART1_Init:
;__Lib_UART_a01.c,12 :: 		
;__Lib_UART_a01.c,15 :: 		
0x0003	0x304C      	MOVLW      _UART1_Write
0x0004	0x0020      	MOVLB      0
0x0005	0x00A7      	MOVWF      _UART_Wr_Ptr
0x0006	0x3000      	MOVLW      hi_addr(_UART1_Write)
0x0007	0x00A8      	MOVWF      _UART_Wr_Ptr+1
0x0008	0x3033      	MOVLW      FARG_UART1_Write_data_
0x0009	0x00A9      	MOVWF      _UART_Wr_Ptr+2
0x000A	0x3000      	MOVLW      hi_addr(FARG_UART1_Write_data_)
0x000B	0x00AA      	MOVWF      _UART_Wr_Ptr+3
;__Lib_UART_a01.c,16 :: 		
0x000C	0x3042      	MOVLW      _UART1_Read
0x000D	0x00AB      	MOVWF      _UART_Rd_Ptr
0x000E	0x3000      	MOVLW      hi_addr(_UART1_Read)
0x000F	0x00AC      	MOVWF      _UART_Rd_Ptr+1
0x0010	0x3000      	MOVLW      0
0x0011	0x00AD      	MOVWF      _UART_Rd_Ptr+2
0x0012	0x3000      	MOVLW      0
0x0013	0x00AE      	MOVWF      _UART_Rd_Ptr+3
;__Lib_UART_a01.c,17 :: 		
0x0014	0x3033      	MOVLW      _UART1_Data_Ready
0x0015	0x00AF      	MOVWF      _UART_Rdy_Ptr
0x0016	0x3000      	MOVLW      hi_addr(_UART1_Data_Ready)
0x0017	0x00B0      	MOVWF      _UART_Rdy_Ptr+1
0x0018	0x3000      	MOVLW      0
0x0019	0x00B1      	MOVWF      _UART_Rdy_Ptr+2
0x001A	0x3000      	MOVLW      0
0x001B	0x00B2      	MOVWF      _UART_Rdy_Ptr+3
;__Lib_UART_a01.c,18 :: 		
0x001C	0x30FF      	MOVLW      _UART1_Tx_Idle
0x001D	0x00A3      	MOVWF      _UART_Tx_Idle_Ptr
0x001E	0x30FF      	MOVLW      hi_addr(_UART1_Tx_Idle)
0x001F	0x00A4      	MOVWF      _UART_Tx_Idle_Ptr+1
0x0020	0x3000      	MOVLW      0
0x0021	0x00A5      	MOVWF      _UART_Tx_Idle_Ptr+2
0x0022	0x3000      	MOVLW      0
0x0023	0x00A6      	MOVWF      _UART_Tx_Idle_Ptr+3
;__Lib_UART_a01.c,20 :: 		
0x0024	0x0023      	MOVLB      3
0x0025	0x169E      	BSF        TXSTA, 5
;__Lib_UART_a01.c,21 :: 		
0x0026	0x3090      	MOVLW      144
0x0027	0x009D      	MOVWF      RCSTA
;__Lib_UART_a01.c,22 :: 		
0x0028	0x0021      	MOVLB      1
0x0029	0x148C      	BSF        TRISA1_bit, BitPos(TRISA1_bit+0)
;__Lib_UART_a01.c,23 :: 		
0x002A	0x140C      	BSF        TRISA0_bit, BitPos(TRISA0_bit+0)
;__Lib_UART_a01.c,24 :: 		
L_UART1_Init0:
0x002B	0x0020      	MOVLB      0
0x002C	0x1E91      	BTFSS      PIR1, 5
0x002D	0x2832      	GOTO       L_UART1_Init1
;__Lib_UART_a01.c,25 :: 		
0x002E	0x0023      	MOVLB      3
0x002F	0x0819      	MOVF       RCREG, 0
0x0030	0x00F0      	MOVWF      R0
0x0031	0x282B      	GOTO       L_UART1_Init0
L_UART1_Init1:
;__Lib_UART_a01.c,26 :: 		
L_end_UART1_Init:
0x0032	0x0008      	RETURN
; end of _UART1_Init
_UART1_Data_Ready:
;__Lib_UART_a01.c,30 :: 		
;__Lib_UART_a01.c,31 :: 		
0x0033	0x3000      	MOVLW      0
0x0034	0x0020      	MOVLB      0
0x0035	0x1A91      	BTFSC      PIR1, 5
0x0036	0x3001      	MOVLW      1
0x0037	0x00F0      	MOVWF      R0
;__Lib_UART_a01.c,32 :: 		
L_end_UART1_Data_Ready:
0x0038	0x0008      	RETURN
; end of _UART1_Data_Ready
___CC2DW:
;__Lib_System.c,71 :: 		
;__Lib_System.c,73 :: 		
_CC2DL_Loop1:
;__Lib_System.c,74 :: 		
0x0039	0x0012      	MOVIW      FSR0++ 
;__Lib_System.c,75 :: 		
0x003A	0x001E      	MOVWI      FSR1++ 
;__Lib_System.c,76 :: 		
0x003B	0x03F0      	DECF       R0, 1
;__Lib_System.c,77 :: 		
0x003C	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,78 :: 		
0x003D	0x2839      	GOTO       _CC2DL_Loop1
;__Lib_System.c,79 :: 		
0x003E	0x03F1      	DECF       R1, 1
;__Lib_System.c,80 :: 		
0x003F	0x1D03      	BTFSS      STATUS, 2
;__Lib_System.c,81 :: 		
0x0040	0x2839      	GOTO       _CC2DL_Loop1
;__Lib_System.c,83 :: 		
L_end___CC2DW:
0x0041	0x0008      	RETURN
; end of ___CC2DW
_UART1_Read:
;__Lib_UART_a01.c,35 :: 		
;__Lib_UART_a01.c,38 :: 		
0x0042	0x0023      	MOVLB      3
0x0043	0x0819      	MOVF       RCREG, 0
0x0044	0x00F1      	MOVWF      R1
;__Lib_UART_a01.c,39 :: 		
0x0045	0x1C9D      	BTFSS      RCSTA, 1
0x0046	0x2849      	GOTO       L_UART1_Read2
;__Lib_UART_a01.c,40 :: 		
0x0047	0x121D      	BCF        RCSTA, 4
;__Lib_UART_a01.c,41 :: 		
0x0048	0x161D      	BSF        RCSTA, 4
;__Lib_UART_a01.c,42 :: 		
L_UART1_Read2:
;__Lib_UART_a01.c,43 :: 		
0x0049	0x0871      	MOVF       R1, 0
0x004A	0x00F0      	MOVWF      R0
;__Lib_UART_a01.c,44 :: 		
L_end_UART1_Read:
0x004B	0x0008      	RETURN
; end of _UART1_Read
_UART1_Write:
;__Lib_UART_a01.c,54 :: 		
;__Lib_UART_a01.c,55 :: 		
L_UART1_Write3:
0x004C	0x0023      	MOVLB      3
0x004D	0x189E      	BTFSC      TXSTA, 1
0x004E	0x2851      	GOTO       L_UART1_Write4
;__Lib_UART_a01.c,56 :: 		
0x004F	0x0000      	NOP
0x0050	0x284C      	GOTO       L_UART1_Write3
L_UART1_Write4:
;__Lib_UART_a01.c,57 :: 		
0x0051	0x0020      	MOVLB      0
0x0052	0x0833      	MOVF       FARG_UART1_Write_data_, 0
0x0053	0x0023      	MOVLB      3
0x0054	0x009A      	MOVWF      TXREG
;__Lib_UART_a01.c,58 :: 		
L_end_UART1_Write:
0x0055	0x0008      	RETURN
; end of _UART1_Write
_main:
;UART.c,8 :: 		void main() {
;UART.c,9 :: 		OSCCON = 0b01111011 ; // INTERNAL OSC 16MH°
0x0056	0x307B      	MOVLW      123
0x0057	0x0021      	MOVLB      1
0x0058	0x0099      	MOVWF      OSCCON
;UART.c,11 :: 		ANSELA  = 0;
0x0059	0x0023      	MOVLB      3
0x005A	0x018C      	CLRF       ANSELA
;UART.c,12 :: 		CM1CON0 = 0x00;   // Disable comparators
0x005B	0x0022      	MOVLB      2
0x005C	0x0191      	CLRF       CM1CON0
;UART.c,14 :: 		RXDTSEL_bit = 1;
0x005D	0x179D      	BSF        RXDTSEL_bit, BitPos(RXDTSEL_bit+0)
;UART.c,15 :: 		TXCKSEL_bit = 1;    //alternate pins RX=RA4, TX=RA5
0x005E	0x151D      	BSF        TXCKSEL_bit, BitPos(TXCKSEL_bit+0)
;UART.c,18 :: 		UART1_Init(9600);                // Initialize UART module at 9600 bps
0x005F	0x0023      	MOVLB      3
0x0060	0x159F      	BSF        BAUDCON, 3
0x0061	0x30A0      	MOVLW      160
0x0062	0x009B      	MOVWF      SPBRG
0x0063	0x3001      	MOVLW      1
0x0064	0x009C      	MOVWF      SPBRG+1
0x0065	0x151E      	BSF        TXSTA, 2
0x0066	0x2003      	CALL       _UART1_Init
;UART.c,19 :: 		Delay_ms(100);                    // Wait for UART module to stabilize
0x0067	0x3003      	MOVLW      3
0x0068	0x00FB      	MOVWF      R11
0x0069	0x3008      	MOVLW      8
0x006A	0x00FC      	MOVWF      R12
0x006B	0x3077      	MOVLW      119
0x006C	0x00FD      	MOVWF      R13
L_main0:
0x006D	0x0BFD      	DECFSZ     R13, 1
0x006E	0x286D      	GOTO       L_main0
0x006F	0x0BFC      	DECFSZ     R12, 1
0x0070	0x286D      	GOTO       L_main0
0x0071	0x0BFB      	DECFSZ     R11, 1
0x0072	0x286D      	GOTO       L_main0
;UART.c,22 :: 		FVRCON = 0b11000010 ;
0x0073	0x30C2      	MOVLW      194
0x0074	0x0022      	MOVLB      2
0x0075	0x0097      	MOVWF      FVRCON
;UART.c,25 :: 		while (1) {                     // Endless loop
L_main1:
;UART.c,26 :: 		if (UART1_Data_Ready()) {     // If data is received,
0x0076	0x2033      	CALL       _UART1_Data_Ready
0x0077	0x0870      	MOVF       R0, 0
0x0078	0x1903      	BTFSC      STATUS, 2
0x0079	0x2881      	GOTO       L_main3
;UART.c,27 :: 		uart_rd = UART1_Read();
0x007A	0x2042      	CALL       _UART1_Read
0x007B	0x0870      	MOVF       R0, 0
0x007C	0x0020      	MOVLB      0
0x007D	0x00A2      	MOVWF      _uart_rd
;UART.c,28 :: 		UART1_Write(uart_rd);       // and send data via UART
0x007E	0x0870      	MOVF       R0, 0
0x007F	0x00B3      	MOVWF      FARG_UART1_Write_data_
0x0080	0x204C      	CALL       _UART1_Write
;UART.c,29 :: 		}
L_main3:
;UART.c,30 :: 		UART1_Write(MS_Byte);
0x0081	0x0020      	MOVLB      0
0x0082	0x0821      	MOVF       _MS_Byte, 0
0x0083	0x00B3      	MOVWF      FARG_UART1_Write_data_
0x0084	0x204C      	CALL       _UART1_Write
;UART.c,31 :: 		Delay_ms(50);
0x0085	0x3002      	MOVLW      2
0x0086	0x00FB      	MOVWF      R11
0x0087	0x3004      	MOVLW      4
0x0088	0x00FC      	MOVWF      R12
0x0089	0x30BA      	MOVLW      186
0x008A	0x00FD      	MOVWF      R13
L_main4:
0x008B	0x0BFD      	DECFSZ     R13, 1
0x008C	0x288B      	GOTO       L_main4
0x008D	0x0BFC      	DECFSZ     R12, 1
0x008E	0x288B      	GOTO       L_main4
0x008F	0x0BFB      	DECFSZ     R11, 1
0x0090	0x288B      	GOTO       L_main4
0x0091	0x0000      	NOP
;UART.c,32 :: 		UART1_Write(LS_Byte);
0x0092	0x0020      	MOVLB      0
0x0093	0x0820      	MOVF       _LS_Byte, 0
0x0094	0x00B3      	MOVWF      FARG_UART1_Write_data_
0x0095	0x204C      	CALL       _UART1_Write
;UART.c,33 :: 		UART1_Write(13);                  // ASCII carriage return
0x0096	0x300D      	MOVLW      13
0x0097	0x0020      	MOVLB      0
0x0098	0x00B3      	MOVWF      FARG_UART1_Write_data_
0x0099	0x204C      	CALL       _UART1_Write
;UART.c,34 :: 		Delay_ms(500);
0x009A	0x300B      	MOVLW      11
0x009B	0x00FB      	MOVWF      R11
0x009C	0x3026      	MOVLW      38
0x009D	0x00FC      	MOVWF      R12
0x009E	0x305D      	MOVLW      93
0x009F	0x00FD      	MOVWF      R13
L_main5:
0x00A0	0x0BFD      	DECFSZ     R13, 1
0x00A1	0x28A0      	GOTO       L_main5
0x00A2	0x0BFC      	DECFSZ     R12, 1
0x00A3	0x28A0      	GOTO       L_main5
0x00A4	0x0BFB      	DECFSZ     R11, 1
0x00A5	0x28A0      	GOTO       L_main5
0x00A6	0x0000      	NOP
0x00A7	0x0000      	NOP
;UART.c,35 :: 		}
0x00A8	0x2876      	GOTO       L_main1
;UART.c,36 :: 		}
L_end_main:
0x00A9	0x28A9      	GOTO       $+0
; end of _main
Symbol List:
//** Routines locations **
//ADDRESS    SIZE    PROCEDURE
//----------------------------------------------
0x0003      [48]    _UART1_Init
0x0033       [6]    _UART1_Data_Ready
0x0039       [9]    ___CC2DW
0x0042      [10]    _UART1_Read
0x004C      [10]    _UART1_Write
0x0056      [84]    _main
//** Variables locations ** 
//ADDRESS    SIZE    VARIABLE
//----------------------------------------------
0x0000       [1]    INDF0
0x0001       [1]    INDF1
0x0003       [1]    STATUS
0x0004       [1]    FSR0L
0x0005       [1]    FSR0H
0x0006       [1]    FSR1L
0x0007       [1]    FSR1H
0x000A       [1]    PCLATH
0x0011       [1]    PIR1
0x0020       [1]    _LS_Byte
0x0021       [1]    _MS_Byte
0x0022       [1]    _uart_rd
0x0023       [4]    _UART_Tx_Idle_Ptr
0x0027       [4]    _UART_Wr_Ptr
0x002B       [4]    _UART_Rd_Ptr
0x002F       [4]    _UART_Rdy_Ptr
0x0033       [1]    FARG_UART1_Write_data_
0x0070       [1]    R0
0x0071       [1]    R1
0x0072       [1]    R2
0x0073       [1]    R3
0x0074       [1]    R4
0x0075       [1]    R5
0x0076       [1]    R6
0x0077       [1]    R7
0x0078       [1]    R8
0x0079       [1]    R9
0x007A       [1]    R10
0x007B       [1]    R11
0x007C       [1]    R12
0x007D       [1]    R13
0x007E       [1]    R14
0x007F       [1]    R15
0x008C       [0]    TRISA0_bit
0x008C       [0]    TRISA1_bit
0x0099       [1]    OSCCON
0x0111       [1]    CM1CON0
0x0117       [1]    FVRCON
0x011D       [0]    RXDTSEL_bit
0x011D       [0]    TXCKSEL_bit
0x018C       [1]    ANSELA
0x0199       [1]    RCREG
0x019A       [1]    TXREG
0x019B       [2]    SPBRG
0x019C       [1]    SPBRGH
0x019D       [1]    RCSTA
0x019E       [1]    TXSTA
0x019F       [1]    BAUDCON
//** Label List: ** 
//----------------------------------------------
  L_main0
  L_main1
  L_main2
  L_main3
  L_main4
  L_main5
  L_readIntTemp6
  L_readIntTemp7
  L_readIntTemp8
  L_end_main
  _main
  L_end_readIntTemp
  _readIntTemp
  L_CA2A_Loop
  L_CA2AW_Loop
  L_CS2S_Loop
  L_CS2S_End
  L_FZinS_Loop
  L_FZinS_End
  _CC2D_Loop1
  _CC2DL_Loop1
  L_end_____DoIFC
  _____DoIFC
  L_end___CA2A
  ___CA2A
  L_end___CA2AW
  ___CA2AW
  L_end___CS2S
  ___CS2S
  L_end___FZinS
  ___FZinS
  L_end___CC2D
  ___CC2D
  L_end___CC2DW
  ___CC2DW
  L_end_Swap
  _Swap
  L_UART1_Init0
  L_UART1_Init1
  L_UART1_Read2
  L_UART1_Write3
  L_UART1_Write4
  L_UART1_Write_Text5
  L_UART1_Write_Text6
  L_UART1_Read_Text7
  L_UART1_Read_Text8
  L_UART1_Read_Text9
  L_UART1_Read_Text10
  L_UART1_Read_Text11
  L_UART1_Read_Text12
  L_UART1_Read_Text13
  L_UART1_Read_Text14
  L_UART1_Read_Text15
  L_UART_Write_Text16
  L_UART_Write_Text17
  L_UART_Read_Text18
  L_UART_Read_Text19
  L_UART_Read_Text20
  L_UART_Read_Text21
  L_UART_Read_Text22
  L_UART_Read_Text23
  L_UART_Read_Text24
  L_UART_Read_Text25
  L_UART_Read_Text26
  L_end_UART1_Init
  _UART1_Init
  L_end_UART1_Data_Ready
  _UART1_Data_Ready
  L_end_UART1_Read
  _UART1_Read
  L_end_UART1_Tx_Idle
  _UART1_Tx_Idle
  L_end_UART1_Write
  _UART1_Write
  L_end_UART1_Write_Text
  _UART1_Write_Text
  L_end_UART1_Read_Text
  _UART1_Read_Text
  L_end_UART_Set_Active
  _UART_Set_Active
  L_end_UART_Write
  _UART_Write
  L_end_UART_Write_Text
  _UART_Write_Text
  L_end_UART_Read
  _UART_Read
  L_end_UART_Data_Ready
  _UART_Data_Ready
  L_end_UART_Read_Text
  _UART_Read_Text
  L_end_UART_Tx_Idle
  _UART_Tx_Idle
